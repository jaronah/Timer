.header,main{padding:2rem 3%}@media (max-width:600px){.header,main{padding-left:1rem;padding-right:1rem}}.btn--edit:disabled,.btn--reset:disabled,.btn--start-pause:disabled{color:#686868;border-color:#686868;cursor:default}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{padding:1.5rem}blockquote,dl,figure,hr,ol,p,pre,table,ul{padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:1rem}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dd,ol,ul{padding-left:1.75rem}blockquote,dd{margin-left:0}blockquote{border:0;padding-left:1.75rem;font-style:italic}figure{margin-left:0;margin-right:0}figure>img,figure>picture,figure>table{margin-bottom:0}fieldset{border:0}legend{padding:0 .5rem}hr{border-style:solid;opacity:.25}body{padding:0}body,h1,h2,h3,h4,h5,h6{margin:0}address,article,aside,blockquote,canvas,dd,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hr,li,main,nav,noscript,ol,p,picture,pre,section,table,tfoot,ul,video{box-sizing:border-box}label{-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}input{min-height:2rem}input[type=checkbox]{background-color:#d1af47}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number],input[type=text],select{box-sizing:border-box;text-align:center;color:#484848;border:none;outline:none;z-index:2}input[type=number]:active,input[type=number]:focus,input[type=text]:active,input[type=text]:focus,select:active,select:focus{outline:2px solid #d1af47}select{margin-bottom:0}.title{display:-ms-flexbox;display:flex}.title--small{margin-bottom:.25rem}.checkbox{display:inline-grid;grid-template-columns:-webkit-min-content auto;grid-template-columns:min-content auto;grid-gap:.5em;color:#d1af47}.checkbox__input input:checked+.checkbox__control svg{-ms-transform:scale(1);transform:scale(1)}.checkbox__input input:focus+.checkbox__control{box-shadow:0 0 0 .05em #eee,0 0 .3em 0 #d1af47}.checkbox__input input:disabled+.checkbox__control{border-color:#686868}.checkbox--disabled{color:#686868}.checkbox__input{display:grid;grid-template-areas:"a";-ms-flex-align:center;align-items:center}.checkbox__input input{opacity:0;width:1em;height:1em}.checkbox__input>*{grid-area:a}.checkbox__control{display:inline-grid;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;width:1em;height:1em;padding:.05em;border-radius:.25em;border:.1em solid #d1af47;cursor:pointer}.checkbox__control svg{transition:transform .1s ease-in 25ms;-ms-transform:scale(0);transform:scale(0);-ms-transform-origin:bottom left;transform-origin:bottom left}.checkbox__label{display:inline-grid;-ms-flex-align:center;align-items:center}@font-face{font-family:Chivo-Regular;src:url(../fonts/Chivo/chivo-regular-webfont.eot);src:url(../fonts/Chivo/chivo-regular-webfont.eot?#iefix) format("embedded-opentype"),url(../fonts/Chivo/chivo-regular-webfont.woff2) format("woff2"),url(../fonts/Chivo/chivo-regular-webfont.woff) format("woff"),url(../fonts/Chivo/chivo-regular-webfont.ttf) format("truetype"),url(../fonts/Chivo/chivo-regular-webfont.svg#chivoregular) format("svg");font-weight:400;font-style:normal}body{font-family:Chivo-Regular}.header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:10rem;background-color:#383838}.header__title{font-size:2.5rem;padding:0;margin:0}@media (min-width:768px){.header__title{font-size:3rem}}.icon{width:1.85rem;height:1.85rem}.btn{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;min-width:2rem;min-height:1.8rem;color:#eee;background-color:#484848;border:1px solid #879287;outline:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.btn:active{color:#fff;border-color:#fff}.btn--round{width:5.3rem;height:5.3rem;margin-bottom:1rem;border:3px solid;border-radius:50%;outline:none;color:#eee;background-color:transparent}@media (min-width:400px){.btn--round{margin-bottom:0}}@media (min-width:768px){.btn--round{width:6rem;height:6rem}}.btn--start-pause{color:#47d147;border-color:#47d147}.btn--start-pause:active{color:#2bee2b;border-color:#2bee2b}.btn--edit{color:#d1af47;border-color:#d1af47}.btn--edit:active{color:#eebd2b;border-color:#eebd2b}.btn--reset{color:#879287;border-color:#879287}.btn--reset:active{color:#afb6af;border-color:#afb6af}.btn--play{padding:.5rem}.btn--play svg path{fill:#47d147}.btn--cancel{background-color:transparent;border:none;outline:none}.btn--cancel:hover{background-color:transparent}.btn--cancel:hover svg path{fill:#d14747}.btn--cancel:active svg path{fill:#ee2b2b}.btn-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;margin:auto;margin-top:5vh;max-width:25rem}@media (min-width:400px){.btn-group{-ms-flex-direction:row;flex-direction:row;margin-top:2.25vh}}.modal{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;max-width:100%;margin:auto;padding:1.8rem;font-size:1.3rem;box-shadow:0 0 20px 20px rgba(0,0,0,.1)}.modal-wrapper{position:absolute;top:0;bottom:0;left:0;right:0;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;background-color:rgba(0,0,0,.4)}.modal__title{font-size:2.25rem}.modal--edit{border:2px solid #d1af47;background-color:#333;z-index:1}.modal--edit__timeset{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:3rem}.modal--edit__timeset .col{min-width:20%;width:5.1rem}.modal-closable-area{position:absolute;width:100%;height:100%;z-index:0}.timer{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:67.5vh}.timer-time{text-align:center;font-size:2.75rem}@media (min-width:320px){.timer-time{font-size:16vw}}@media (min-width:768px){.timer-time{font-size:8.5rem}}body{background-color:#333;color:#eee}.row{-ms-flex-direction:row;flex-direction:row}.col,.row{display:-ms-flexbox;display:flex}.col{-ms-flex-direction:column;flex-direction:column}.d-n{display:none}.f-sb{-ms-flex-pack:justify;justify-content:space-between}.font-larger{font-size:1.85rem}.m-0{margin:0}.m-0-5{margin:.5rem}.m-1{margin:1rem}.m-1-5{margin:1.5rem}.m-2{margin:2rem}.m-2-5{margin:2.5rem}.m-3{margin:3rem}.mt-0{margin-top:0}.mt-0-5{margin-top:.5rem}.mt-1{margin-top:1rem}.mt-1-5{margin-top:1.5rem}.mt-2{margin-top:2rem}.mt-2-5{margin-top:2.5rem}.mt-3{margin-top:3rem}.mb-0{margin-bottom:0}.mb-0-5{margin-bottom:.5rem}.mb-1{margin-bottom:1rem}.mb-1-5{margin-bottom:1.5rem}.mb-2{margin-bottom:2rem}.mb-2-5{margin-bottom:2.5rem}.mb-3{margin-bottom:3rem}.ml-0{margin-left:0}.ml-0-5{margin-left:.5rem}.ml-1{margin-left:1rem}.ml-1-5{margin-left:1.5rem}.ml-2{margin-left:2rem}.ml-2-5{margin-left:2.5rem}.ml-3{margin-left:3rem}.mr-0{margin-right:0}.mr-0-5{margin-right:.5rem}.mr-1{margin-right:1rem}.mr-1-5{margin-right:1.5rem}.mr-2{margin-right:2rem}.mr-2-5{margin-right:2.5rem}.mr-3{margin-right:3rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
